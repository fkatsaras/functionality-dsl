Server WeatherServer
  host: "localhost"
  port: 8080
  cors: "http://localhost:3000"
  loglevel: debug
end

// --- External REST sources -------------------------------------
Source<REST> MeteoThess
  url: "https://api.open-meteo.com/v1/forecast?latitude=40.64&longitude=22.94&hourly=temperature_2m,relative_humidity_2m&timezone=auto"
  verb: GET
end

Source<REST> MeteoLondon
  url: "https://api.open-meteo.com/v1/forecast?latitude=51.5072&longitude=-0.1276&hourly=temperature_2m,relative_humidity_2m&timezone=auto"
  verb: GET
end

// --- Raw entities ----------------------------------------------
Entity ThessHourly
  source: MeteoThess
  attributes:
    - hourly: dict = MeteoThess["hourly"];
end

Entity LondonHourly
  source: MeteoLondon
  attributes:
    - hourly: dict = MeteoLondon["hourly"];
end

// --- Row-shaped compare entity ---------------------------------
Entity WeatherCompare(ThessHourly, LondonHourly)
  attributes:
    - rows: list = map(
        zip(
          ThessHourly.hourly["time"],
          ThessHourly.hourly["temperature_2m"],
          LondonHourly.hourly["temperature_2m"],
          ThessHourly.hourly["relative_humidity_2m"],
          LondonHourly.hourly["relative_humidity_2m"]
        ),
        (t, th_t, ln_t, th_h, ln_h) -> {
          "time": t,
          "th_temp": th_t,
          "ln_temp": ln_t,
          "th_hum": th_h,
          "ln_hum": ln_h,
          "delta_temp": abs(th_t - ln_t),
          "hotter_city": ("Thessaloniki" if th_t > ln_t else "London"),
          "big_gap": (abs(th_t - ln_t) >= 5),
          "th_is_comfy": ((abs(th_t - 22) < 3) and (th_h >= 30) and (th_h <= 60)),
          "ln_is_comfy": ((abs(ln_t - 22) < 3) and (ln_h >= 30) and (ln_h <= 60))
        }
      );
end
// --- Simplified stats view (line chart) ------------------------
Entity WeatherStats(WeatherCompare)
  attributes:
    - rows: list = [
        { time: r["time"], th_temp: r["th_temp"], ln_temp: r["ln_temp"] }
        for r in WeatherCompare.rows
      ];
end

// --- Internal endpoints ----------------------------------------
APIEndpoint<REST> WeatherCompareAPI
  path: "/api/weather/compare"
  verb: GET
  entity: WeatherCompare
end

APIEndpoint<REST> WeatherStatsAPI
  path: "/api/weather/stats"
  verb: GET
  entity: WeatherStats
end

// --- Components ------------------------------------------------
Component<Table> WeatherTable
  endpoint: WeatherCompareAPI
  colNames: ["time", "th_temp", "ln_temp", "delta_temp", "hotter_city", "big_gap", "th_hum", "ln_hum", "th_is_comfy", "ln_is_comfy"]
end

Component<LineChart> TempComparison
  endpoint: WeatherStatsAPI
  rows: data.rows
  seriesLabels: ["Thessaloniki", "London"]
  xLabel: "Time"
  yLabel: "Temperature (Â°C)"
end
