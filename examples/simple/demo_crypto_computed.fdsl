Server BinanceWS
  host: "localhost"
  port: 8080
  cors: "http://localhost:3000"
  // env: dev
end

// --- WS sources (Binance miniTicker) -----------------------------------------
WSEndpoint BinanceBTCMini
  url: "wss://stream.binance.com:9443/ws/btcusdt@miniTicker"
  protocol: "json"
end

WSEndpoint BinanceETHMini
  url: "wss://stream.binance.com:9443/ws/ethusdt@miniTicker"
  protocol: "json"
end

// Raw WS entities describe the fields weâ€™ll reference in computed expressions.
// miniTicker payload has keys like c (last price), o/h/l (open/high/low).
Entity BTCMini
  source: BinanceBTCMini
  attributes:
    - c: float
    - o: float
    - h: float
    - l: float
end

Entity ETHMini
  source: BinanceETHMini
  attributes:
    - c: float
    - o: float
    - h: float
    - l: float
end

// Computed, streaming view
Entity PriceGap
  inputs:
    - b: BTCMini
    - e: ETHMini
  attributes:
    - time       = now()
    - gap        = abs(float(b.c) - float(e.c))
  where: self.gap >= 100
end

Component<LineChart> BitcoinPrice
  entity: PriceGap
  x: data.time
  y: [data.gap]
  xLabel: "Time"
  yLabel: "USDT"
end