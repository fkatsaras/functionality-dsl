// ----------- Server (config) -----------
Server DemoAPI
  host: "localhost"
  port: 8080
  cors: "http://localhost:3000"
end

// ----------- Sources (public REST) -----------
// Both endpoints return JSON ARRAYS (lists of objects)

RESTEndpoint Posts
  url: "https://jsonplaceholder.typicode.com/posts"
  verb: GET
end

RESTEndpoint Users
  url: "https://jsonplaceholder.typicode.com/users"
  verb: GET
end

// ----------- Entities (data) -----------
// These two are direct REST-backed entities. Attribute names must match the remote JSON keys.

Entity Post
  source: Posts
  attributes:
    - userId: int
    - id: int
    - title: string
    - body: string
end

Entity User
  source: Users
  attributes:
    - id: int
    - name: string
    - username: string
    - email: string
end

// Derived entity: combine "Post" and "User" to expose author name + some computed stats.
// NOTE: For demo purposes we index-align (min_len). In real apps you'd join by keys (e.g., userId==id).
Entity PostWithAuthor
  inputs:
    - p: Post
    - u: User
  attributes:
    - post_id   = p.id
    - title     = p.title
    - author    = u.name
    - body_len  = len(p.body)
end

// ----------- Components (UI bindings) -----------
// A simple table that shows the derived data. Component props must use ONLY `data.*`.

Component<LiveTable> PostsTable
  entity: PostWithAuthor
  props:
    - primaryKey: "post_id"
    - columns: data.post_id, data.author, data.title, data.body_len
end
