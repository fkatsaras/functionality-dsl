// ========================================================================
// ENTITY CHAINING TEST SUITE
// ========================================================================

// --- Server -------------------------------------------------------------
Server ChainServer
  host: "localhost"
  port: 8081
  cors: "http://localhost:5173"
  loglevel: debug
end

// --- External Sources ---------------------------------------------------
Source<REST> ExternalBase
  url: "https://httpbin.org/anything/base"
  verb: GET
end


// ========================================================================
// TEST 1 : Simple Single-Level Query (GET)
// ========================================================================

APIEndpoint<REST> SingleLevel
  path: "/api/single"
  verb: GET
  entity: E1
end

Entity E1
  source: ExternalBase
  attributes:
    - message: string = "ok";
    - source: dict = ExternalBase;
end

// ========================================================================
// TEST 2 : Two-Level Computation Chain (GET)
// ========================================================================

APIEndpoint<REST> ChainQuery
  path: "/api/chain"
  verb: GET
  entity: E2
end

Entity BaseEntity
  source: ExternalBase
  attributes:
    - base: string = "BASE";
end

Entity E1Derived(BaseEntity)
  attributes:
    - derived: string = BaseEntity.base + "_DERIVED";
end

Entity E2(E1Derived)
  attributes:
    - combined: string = E1Derived.derived + "_FINAL";
  validations:
    - require(len(E2.combined) > 0, "Empty combined", 400);
end

// ========================================================================
// TEST 3 : Mutation Flow with Chained Validation (POST)
// ========================================================================

APIEndpoint<REST> ChainMutation
  path: "/api/chain"
  verb: POST
  entity: M3Request
end

Entity M3Request
  source: ChainMutation
  attributes:
    - value: int = ChainMutation.value;
end

Entity M3Validated(M3Request)
  attributes:
    - value: int = M3Request.value;
  validations:
    - require(M3Validated.value > 0, "Value must be positive", 400);
end

Entity M3Payload(M3Validated)
  attributes:
    - doubled: int = M3Validated.value * 2;
end

Source<REST> ChainExternal
  url: "https://httpbin.org/anything/mutation"
  verb: POST
  entity: M3Payload
end

// ========================================================================
// TEST 4 : WebSocket Chain (Streaming → Compute → Emit)
// ========================================================================

Source<WS> StreamSource
  url: "wss://echo.websocket.events"
  entity_out: WSRaw
end

APIEndpoint<WS> StreamChain
  path: "/ws/chain"
  entity_in: WSProcessed
end

Entity WSRaw
  source: StreamSource
  attributes:
    - msg: string = StreamSource;
end

Entity WSProcessed(WSRaw)
  attributes:
    - upper: string = upper(str(WSRaw.msg));
end
