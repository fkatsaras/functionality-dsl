// =============================================================
//                     SERVER CONFIG
// =============================================================
Server IoTServer
  host: "localhost"
  port: 8085
  cors: "http://localhost:3000"
end


// =============================================================
//                     EXTERNAL SERVICES (LIVE)
// =============================================================

// Device list metadata (static REST)
Source<REST> DevicesAPI
  url: "http://dummyiot:9500/api/devices"
  verb: GET
end

// --- Individual live sensor WebSocket feeds ---
Source<WS> Sensor1Feed
  entity_out: Sensor1Raw
  url: "ws://dummyiot:9601"
  protocol: "json"
end

Source<WS> Sensor2Feed
  entity_out: Sensor2Raw
  url: "ws://dummyiot:9602"
  protocol: "json"
end

Source<WS> Sensor3Feed
  entity_out: Sensor3Raw
  url: "ws://dummyiot:9603"
  protocol: "json"
end

Source<WS> Sensor4Feed
  entity_out: Sensor4Raw
  url: "ws://dummyiot:9604"
  protocol: "json"
end


// =============================================================
//                     DEVICE SNAPSHOT
// =============================================================
Entity DeviceList
  source: DevicesAPI
  attributes:
    - devices: list = DevicesAPI;
end

// =============================================================
//                     LIVE TELEMETRY (WS)
// =============================================================

// Each raw entity normalizes WS frame shape
Entity Sensor1Raw
  source: Sensor1Feed
  attributes:
    - device_id: string = "sensor1";
    - temperature: float = Sensor1Feed["temp"];
    - humidity: float = Sensor1Feed["hum"];
    - timestamp: int = Sensor1Feed["ts"];
end

Entity Sensor2Raw
  source: Sensor2Feed
  attributes:
    - device_id: string = "sensor2";
    - temperature: float = Sensor2Feed["temp"];
    - humidity: float = Sensor2Feed["hum"];
    - timestamp: int = Sensor2Feed["ts"];
end

Entity Sensor3Raw
  source: Sensor3Feed
  attributes:
    - device_id: string = "sensor3";
    - temperature: float = Sensor3Feed["temp"];
    - humidity: float = Sensor3Feed["hum"];
    - timestamp: int = Sensor3Feed["ts"];
end

Entity Sensor4Raw
  source: Sensor4Feed
  attributes:
    - device_id: string = "sensor4";
    - temperature: float = Sensor4Feed["temp"];
    - humidity: float = Sensor4Feed["hum"];
    - timestamp: int = Sensor4Feed["ts"];
end

// Combine all into unified Telemetry stream
Entity TelemetryCombined(Sensor1Raw, Sensor2Raw, Sensor3Raw, Sensor4Raw)
  attributes:
    - readings: list = [Sensor1Raw, Sensor2Raw, Sensor3Raw, Sensor4Raw];
    - ts: int = Sensor1Raw.timestamp;
end

// Computed metrics
Entity TelemetryComputed(TelemetryCombined)
  attributes:
    - t: int = TelemetryCombined.ts;
    - avg_temp: float = avg(map(TelemetryCombined.readings, r -> r["temperature"]));
    - avg_hum:  float = avg(map(TelemetryCombined.readings, r -> r["humidity"]));
    - avg_heat: float = avg(map(TelemetryCombined.readings, r -> r["temperature"] + 0.2 * r["humidity"]));
end

// =============================================================
//                     DUMMY DEVICE TOGGLE
// =============================================================

// External dummy REST service for toggle
Source<REST> ACToggleExternal
  url: "http://dummyiot:9500/api/device/toggle/ac"
  verb: POST
  entity: ToggleCommand
end

// REST endpoint that toggles dummy AC
APIEndpoint<REST> ACToggle
  path: "/api/device/toggle/ac"
  verb: POST
  entity: ToggleCommand
end

Entity ToggleCommand
  source: ACToggle
  attributes:
    - state: bool = ACToggle.state;
end


// =============================================================
//                     INTERNAL STREAMS
// =============================================================
APIEndpoint<WS> TelemetryStream
  path: "/api/telemetry/live"
  entity_in: TelemetryComputed
end


// =============================================================
//                     UI COMPONENTS
// =============================================================

// Live table of all sensors
Component<LiveView> TelemetryTable
  endpoint: TelemetryStream
  fields: ["t", "avg_temp", "avg_hum", "avg_heat"]
  label: "Live Sensor Telemetry"
end

// REST switches
Component<Toggle> ACToggleSwitch
  endpoint: ACToggle
  label: "Air Conditioner"
  onLabel: "Cooling"
  offLabel: "Idle"
  field: "state"
end

// Gauges for averages
Component<Gauge> AverageTemperature
  endpoint: TelemetryStream
  value: data.avg_temp
  min: 0
  max: 100
  label: "Average Temperature"
  unit: "C"
end

Component<Gauge> AverageHumidity
  endpoint: TelemetryStream
  value: data.avg_hum
  min: 0
  max: 100
  label: "Average Humidity"
  unit: "%"
end

Component<LineChart> HeatIndexTrend
  endpoint: TelemetryStream
  rows: data.avg_heat
  seriesLabels: ["Avg Heat Index"]
  xLabel: "Time"
  yLabel: "Heat Index"
end