{% raw -%}
from fastapi import APIRouter, Depends
from sqlalchemy.orm import Session
from .database import get_db
from . import services, schemas

router = APIRouter()

{% for ep in endpoints %}
# {{ ep.transport }} endpoint generated from pipeline {{ ep.pipeline.name }}
{% if 'LIST' in ep.operations %}
@router.get("{{ ep.path }}", response_model=list[schemas.{{ ep.pipeline.output_schema }}])
def {{ ep.pipeline.name|lower }}_list(db: Session = Depends(get_db)):
    return services.{{ ep.pipeline.name|lower }}_list(db)
{% endif %}

{% if 'RETRIEVE' in ep.operations %}
@router.get("{{ ep.path }}/{{ '{id}' }}", response_model=schemas.{{ ep.pipeline.output_schema }})
def {{ ep.pipeline.name|lower }}_retrieve(id: int, db: Session = Depends(get_db)):
    items = services.{{ ep.pipeline.name|lower }}_list(db)
    for itm in items:
        if itm.id == id:
            return itm
    raise HTTPException(status_code=404, detail="Not found")
{% endif %}

{% endfor %}
{% endraw %}