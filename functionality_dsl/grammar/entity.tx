import database
import client
import endpoints

// Primitive
AttrType:
    'string' | 'int' | 'float' | 'number' | 'bool' | 'datetime' | 'uuid' | 'dict'
;

Bool: 'true' | 'false';

// Literal for defaults
AttrValue:
    STRING | FLOAT | INT | Bool
;

// Optional attribute modifiers after type
AttrModifier:
    'pk' | 'required'
;

// Polymorphic source for entities (frontend client, REST/WS endpoint, or database)
Source:
      Client
    | RESTEndpoint
    | WebSocketEndpoint
    | Database
;

// Entities define shape (and optionally storage/source/uri)
Model:
    'Model' name=ID
    (
        ('source:' source=[Source])?       // 0..1 source (e.g., Database, Client, Endpoint)
        ('table:'  table=STRING)?          // DB-oriented models can set a table
        'attributes:' '-' attributes+=Attribute['-']
    )#
    'end'
;

Request:
    'Request' name=ID
    (
        ('base:' base=[Entity])?           //  projection/base model
        'attributes:' '-' attributes+=Attribute['-']
    )#
    'end'
;

Response:
    'Response' name=ID
    (
        ('base:' base=[Entity])?           //  projection/base model
        'attributes:' '-' attributes+=Attribute['-']
    )#
    'end'
;

Entity:
      Model
    | Request
    | Response
;


// Attribute line:
//   <name> ':' <type> (modifiers...)? ('default=' <value>)?
Attribute:
    name=ID ':' type=AttrType
    (modifiers+=AttrModifier)*
    ('default=' default=AttrValue)?
;